{"version":3,"sources":["App.js","index.js"],"names":["App","useState","loading","setLoading","jobs","setJobs","value","setValue","fetchJobs","a","fetch","response","json","newJobs","useEffect","company","dates","duties","title","description","className","map","job","index","key","onClick","duty","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAoEeA,MA/Df,WAAgB,IAAD,EACiBC,oBAAS,GAD1B,mBACNC,EADM,KACGC,EADH,OAEWF,mBAAS,IAFpB,mBAENG,EAFM,KAEAC,EAFA,OAGaJ,mBAAS,GAHtB,mBAGNK,EAHM,KAGCC,EAHD,KAKPC,EAAS,uCAAG,8BAAAC,EAAA,sEACOC,MARf,6CAOQ,cACVC,EADU,gBAEMA,EAASC,OAFf,OAEVC,EAFU,OAGhBR,EAAQQ,GACRV,GAAYD,GAJI,2CAAH,qDAWf,GAJAY,qBAAU,WACRN,MACC,IAECN,EACF,OACE,iCACE,2CAnBO,MAuB0CE,EAAKE,GAApDS,EAvBK,EAuBLA,QAASC,EAvBJ,EAuBIA,MAAOC,EAvBX,EAuBWA,OAAQC,EAvBnB,EAuBmBA,MAChC,OAxBa,EAuB0BC,YAErC,6BAASC,UAAU,WACjB,yBAAKA,UAAU,SACb,0CACA,yBAAKA,UAAU,mBAEjB,yBAAKA,UAAU,eAEb,yBAAKA,UAAU,iBACZhB,EAAKiB,KAAI,SAACC,EAAKC,GACd,OACE,4BACEC,IAAKD,EACLE,QAAS,kBAAMlB,EAASgB,IACxBH,UAAS,kBAAaG,IAAUjB,GAAS,eACxCgB,EAAIP,aAMb,6BAASK,UAAU,YACjB,4BAAKF,GACL,4BAAKH,GACL,uBAAGK,UAAU,YAAYJ,GACxBC,EAAOI,KAAI,SAACK,EAAMH,GACjB,OACE,yBAAKC,IAAKD,EAAOH,UAAU,YACzB,kBAAC,IAAD,CAAoBA,UAAU,YAA9B,KACA,2BAAIM,WCrDpBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.6262a1b6.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { FaAngleDoubleRight } from \"react-icons/fa\";\n\nconst url = \"https://course-api.com/react-tabs-project\";\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [jobs, setJobs] = useState([]);\n  const [value, setValue] = useState(0);\n\n  const fetchJobs = async () => {\n    const response = await fetch(url);\n    const newJobs = await response.json(); //fetch jobs and save to setJobs\n    setJobs(newJobs);\n    setLoading(!loading);\n  };\n\n  useEffect(() => {\n    fetchJobs();\n  }, []); // only runs on initial render\n\n  if (loading) {\n    return (\n      <section>\n        <h1>Loading...</h1>\n      </section>\n    );\n  }\n  const { company, dates, duties, title, description } = jobs[value];\n  return (\n    <section className=\"section\">\n      <div className=\"title\">\n        <h2>experiance</h2>\n        <div className=\"underline-div\"></div>\n      </div>\n      <div className=\"jobs-center\">\n        {/* btn container */}\n        <div className=\"btn-container\">\n          {jobs.map((job, index) => {\n            return (\n              <button\n                key={index}\n                onClick={() => setValue(index)}\n                className={`job-btn ${index === value && \"active-btn\"}`}>\n                {job.company}\n              </button>\n            );\n          })}\n        </div>\n        {/* job info */}\n        <article className=\"job-info\">\n          <h3>{title}</h3>\n          <h4>{company}</h4>\n          <p className=\"job-date\">{dates}</p>\n          {duties.map((duty, index) => {\n            return (\n              <div key={index} className=\"job-desc\">\n                <FaAngleDoubleRight className=\"job-icon\"> </FaAngleDoubleRight>\n                <p>{duty}</p>\n              </div>\n            );\n          })}\n        </article>\n      </div>\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}